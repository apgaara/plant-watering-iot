name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Jalankan pipeline saat ada push ke branch 'main'
  pull_request:
    branches:
      - main  # Jalankan pipeline pada PR yang ditargetkan ke 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.16
        options: --privileged

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Build and push API Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/plant-watering-api:latest -f Dockerfile .
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/plant-watering-api:latest

    - name: Build and push Client Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/plant-watering-client:latest -f client/Dockerfile ./client
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/plant-watering-client:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy API and Client Containers
      run: |
        docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/plant-watering-api:latest
        docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/plant-watering-client:latest

        # Jalankan API container di port 3000
        docker run -d -p 3000:3000 --name api_server ${{ secrets.DOCKER_HUB_USERNAME }}/plant-watering-api:latest
        
        # Jalankan Client container di port 8080
        docker run -d -p 8080:80 --name client_server ${{ secrets.DOCKER_HUB_USERNAME }}/plant-watering-client:latest
